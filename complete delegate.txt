delegate revision--------------------------------------------

//delegate is a type safe function pointer .....
//delegate hold the reference of a method and then call that method for execution....
//delegate are of two types single cast and multi cast
//with the help of delegate we can do annonymous code lamda programing  

  

using System;
delegate void MyDelegate();

class delega
{
    public void Mytraining()
    {
        Console.WriteLine("Advance C#is going on");

    }
    public string music()
        {
          return "no time for music";

        }
    

}
class Mycontroller
{
    public static void Main()
    {
        delega deepa= new delega();
        MyDelegate mylife=new MyDelegate(deepa.Mytraining);
        mylife();

    }
}

-------------------------------------------------------------------------------------------------

Multicast Delegate 

// when we have multiple function with same signature the we don't need to make separate delegate for each method we directly can access the method with the same delegate as the function signature is same...........


using System;
delegate void MyDelegate(double width,double height );

class Rectangle
{
    public void GetArea(double width, double height)
    {
        Console.WriteLine(width*height);
    }
    public void GetPerimeter(double width, double height )
    {
        Console.WriteLine(2 *( width+height));
    }
    static void Main()
{
    Rectangle rect=new Rectangle();
    MyDelegate mylife=new MyDelegate(rect.GetArea);
    mylife+=rect.GetPerimeter;            //this is how we do multi cast delegate 
    mylife(40.40,40.20);

    
}
            
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------
Anonymous Codee - without binding the method to the delegate we can bind the  code block with the delegate ........



using System;
delegate void MyDelegate();

public class delega
{
    
    public string music()
        {
          return "no time for music";

        }
    

}
class Mycontroller
{
    public static void Main()
    {
        delega deepa= new delega();
        MyDelegate mylife= delegate()                         //  just remove the new and simplly write the delegate and bind the code block under it ......
       {
        string mess = "advance C# is going on";
        Console.WriteLine(mess);
       };
        mylife();

    }
}


------------------------------------------------------------------------------------------------------------------------------------------------------------------
lambda programming 



using System;
delegate void MyDelegate();

public class delega
{
    
    public string music()
        {
          return "no time for music";

        }
    

}
class Mycontroller
{
    public static void Main()
    {
        delega deepa= new delega();
        MyDelegate mylife= ()=>
       {
        string mess = "advance C# is going on";
        Console.WriteLine(mess);
       };
        mylife();

    }
}